// automatically generated by the FlatBuffers compiler, do not modify

package flatbuffer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FResultInfo extends Table {
  public static FResultInfo getRootAsFResultInfo(ByteBuffer _bb) { return getRootAsFResultInfo(_bb, new FResultInfo()); }
  public static FResultInfo getRootAsFResultInfo(ByteBuffer _bb, FResultInfo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FResultInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int code() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public FDebrisInfo data() { return data(new FDebrisInfo()); }
  public FDebrisInfo data(FDebrisInfo obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createFResultInfo(FlatBufferBuilder builder,
      int code,
      int dataOffset) {
    builder.startObject(2);
    FResultInfo.addData(builder, dataOffset);
    FResultInfo.addCode(builder, code);
    return FResultInfo.endFResultInfo(builder);
  }

  public static void startFResultInfo(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addCode(FlatBufferBuilder builder, int code) { builder.addInt(0, code, 0); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(1, dataOffset, 0); }
  public static int endFResultInfo(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishFResultInfoBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

