// automatically generated by the FlatBuffers compiler, do not modify

package flatbuffer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FDebris extends Table {
  public static FDebris getRootAsFDebris(ByteBuffer _bb) { return getRootAsFDebris(_bb, new FDebris()); }
  public static FDebris getRootAsFDebris(ByteBuffer _bb, FDebris obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FDebris __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String image() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer imageAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public int changeNum() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public long id() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String name() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public boolean highlight() { int o = __offset(12); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static int createFDebris(FlatBufferBuilder builder,
      int imageOffset,
      int changeNum,
      long id,
      int nameOffset,
      boolean highlight) {
    builder.startObject(5);
    FDebris.addId(builder, id);
    FDebris.addName(builder, nameOffset);
    FDebris.addChangeNum(builder, changeNum);
    FDebris.addImage(builder, imageOffset);
    FDebris.addHighlight(builder, highlight);
    return FDebris.endFDebris(builder);
  }

  public static void startFDebris(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addImage(FlatBufferBuilder builder, int imageOffset) { builder.addOffset(0, imageOffset, 0); }
  public static void addChangeNum(FlatBufferBuilder builder, int changeNum) { builder.addInt(1, changeNum, 0); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(2, id, 0L); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(3, nameOffset, 0); }
  public static void addHighlight(FlatBufferBuilder builder, boolean highlight) { builder.addBoolean(4, highlight, false); }
  public static int endFDebris(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

